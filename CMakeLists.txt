cmake_minimum_required(VERSION 3.16)

set(PROJECT_NAME $ENV{PROJECT_NAME})
set(CMAKE_BUILD_DIRECTORY build)
set(CMAKE_TOOLCHAIN_FILE $ENV{STM32_CMAKE_PATH}/stm32_gcc.cmake)
set(STM32_COMPONENT "STM32$ENV{STM32_MCU}")
set(CMAKE_C_COMPILER $ENV{STM32_TOOLCHAIN_PATH}/arm-none-eabi-gcc)
set(CMAKE_ASM_COMPILER ${CMAKE_C_COMPILER})
set(STM32_TARGET_TRIPLET arm-none-eabi)
set(STM32_SERIES)
string(SUBSTRING $ENV{STM32_MCU} 0 2 STM32_SERIES)

message(PROJECT_NAME=$ENV{PROJECT_NAME})
message(STM32_SERIES=${STM32_SERIES})
message(STM32_MCU=$ENV{STM32_MCU})
message(STM32_COMPONENT=${STM32_COMPONENT})
message(STM32_CMAKE_PATH=$ENV{STM32_CMAKE_PATH})
message(C_COMPILER=$ENV{STM32_TOOLCHAIN_PATH}/arm-none-eabi-gcc)

project(${PROJECT_NAME} C ASM)

stm32_fetch_hal(${STM32_SERIES})

set(HAL_COMP_LIST UART SPI PWR FLASH RCC DMA EXTI GPIO CORTEX)
list(APPEND HAL_COMP_LIST ${STM32_COMPONENT})

find_package(HAL COMPONENTS "${HAL_COMP_LIST}" REQUIRED)
find_package(CMSIS COMPONENTS ${STM32_COMPONENT} REQUIRED)
set(CMAKE_INCLUDE_CURRENT_DIR TRUE)

set(PROJECT_SOURCES
    src/main.c
    src/stm32f4xx_it.c
    src/stm32f4xx_it.h
    src/main.h
)

add_executable(${PROJECT_NAME} ${PROJECT_SOURCES})

target_link_libraries(${PROJECT_NAME}
    CMSIS::STM32::${STM32_SERIES}
    CMSIS::STM32::$ENV{STM32_MCU}
    HAL::STM32::${STM32_SERIES}
    HAL::STM32::${STM32_SERIES}::GPIO
    HAL::STM32::${STM32_SERIES}::CORTEX
    HAL::STM32::${STM32_SERIES}::SPI
    HAL::STM32::${STM32_SERIES}::UART
    HAL::STM32::${STM32_SERIES}::RCC
    HAL::STM32::${STM32_SERIES}::PWR
    HAL::STM32::${STM32_SERIES}::DMA
    HAL::STM32::${STM32_SERIES}::EXTI
    HAL::STM32::${STM32_SERIES}::FLASH

    # STM32::NoSys
)

SET(ELF_FILE ${PROJECT_NAME}.elf)
SET(BIN_FILE ${PROJECT_NAME}.bin)
SET(OBJCOPY ${STM32_TOOLCHAIN_PATH}/arm-none-eabi-objcopy)
add_custom_command(TARGET ${PROJECT_NAME}
        POST_BUILD
        COMMAND ${OBJCOPY} -O binary ${ELF_FILE} ${BIN_FILE}
)

stm32_print_size_of_target(${PROJECT_NAME})
